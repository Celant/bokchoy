// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: bokchoy.proto

package proto

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type PublishTaskRequest struct {
	Queue                string               `protobuf:"bytes,1,opt,name=queue,proto3" json:"queue,omitempty"`
	Payload              *wrappers.BytesValue `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Countdown            *time.Duration       `protobuf:"bytes,3,opt,name=countdown,proto3,stdduration" json:"countdown,omitempty"`
	Timeout              *time.Duration       `protobuf:"bytes,4,opt,name=timeout,proto3,stdduration" json:"timeout,omitempty"`
	TTL                  *time.Duration       `protobuf:"bytes,5,opt,name=ttl,proto3,stdduration" json:"ttl,omitempty"`
	MaxRetries           *wrappers.Int64Value `protobuf:"bytes,6,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	RetryIntervals       []*time.Duration     `protobuf:"bytes,7,rep,name=retry_intervals,json=retryIntervals,proto3,stdduration" json:"retry_intervals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PublishTaskRequest) Reset()         { *m = PublishTaskRequest{} }
func (m *PublishTaskRequest) String() string { return proto.CompactTextString(m) }
func (*PublishTaskRequest) ProtoMessage()    {}
func (*PublishTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e2b3c797ca0eafb, []int{0}
}
func (m *PublishTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishTaskRequest.Unmarshal(m, b)
}
func (m *PublishTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishTaskRequest.Marshal(b, m, deterministic)
}
func (m *PublishTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishTaskRequest.Merge(m, src)
}
func (m *PublishTaskRequest) XXX_Size() int {
	return xxx_messageInfo_PublishTaskRequest.Size(m)
}
func (m *PublishTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PublishTaskRequest proto.InternalMessageInfo

func (m *PublishTaskRequest) GetQueue() string {
	if m != nil {
		return m.Queue
	}
	return ""
}

func (m *PublishTaskRequest) GetPayload() *wrappers.BytesValue {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *PublishTaskRequest) GetCountdown() *time.Duration {
	if m != nil {
		return m.Countdown
	}
	return nil
}

func (m *PublishTaskRequest) GetTimeout() *time.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *PublishTaskRequest) GetTTL() *time.Duration {
	if m != nil {
		return m.TTL
	}
	return nil
}

func (m *PublishTaskRequest) GetMaxRetries() *wrappers.Int64Value {
	if m != nil {
		return m.MaxRetries
	}
	return nil
}

func (m *PublishTaskRequest) GetRetryIntervals() []*time.Duration {
	if m != nil {
		return m.RetryIntervals
	}
	return nil
}

type Task struct {
	ID                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Payload              *wrappers.BytesValue `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Status               int64                `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	MaxRetries           int64                `protobuf:"varint,5,opt,name=max_retries,json=maxRetries,proto3" json:"max_retries,omitempty"`
	Timeout              *time.Duration       `protobuf:"bytes,6,opt,name=timeout,proto3,stdduration" json:"timeout,omitempty"`
	TTL                  *time.Duration       `protobuf:"bytes,7,opt,name=ttl,proto3,stdduration" json:"ttl,omitempty"`
	RetryIntervals       []*time.Duration     `protobuf:"bytes,8,rep,name=retry_intervals,json=retryIntervals,proto3,stdduration" json:"retry_intervals,omitempty"`
	PublishedAt          *time.Time           `protobuf:"bytes,9,opt,name=published_at,json=publishedAt,proto3,stdtime" json:"published_at,omitempty"`
	StartedAt            *time.Time           `protobuf:"bytes,10,opt,name=started_at,json=startedAt,proto3,stdtime" json:"started_at,omitempty"`
	ProcessedAt          *time.Time           `protobuf:"bytes,11,opt,name=processed_at,json=processedAt,proto3,stdtime" json:"processed_at,omitempty"`
	ETA                  *time.Time           `protobuf:"bytes,12,opt,name=eta,proto3,stdtime" json:"eta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e2b3c797ca0eafb, []int{1}
}
func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetPayload() *wrappers.BytesValue {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Task) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Task) GetMaxRetries() int64 {
	if m != nil {
		return m.MaxRetries
	}
	return 0
}

func (m *Task) GetTimeout() *time.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *Task) GetTTL() *time.Duration {
	if m != nil {
		return m.TTL
	}
	return nil
}

func (m *Task) GetRetryIntervals() []*time.Duration {
	if m != nil {
		return m.RetryIntervals
	}
	return nil
}

func (m *Task) GetPublishedAt() *time.Time {
	if m != nil {
		return m.PublishedAt
	}
	return nil
}

func (m *Task) GetStartedAt() *time.Time {
	if m != nil {
		return m.StartedAt
	}
	return nil
}

func (m *Task) GetProcessedAt() *time.Time {
	if m != nil {
		return m.ProcessedAt
	}
	return nil
}

func (m *Task) GetETA() *time.Time {
	if m != nil {
		return m.ETA
	}
	return nil
}

func init() {
	proto.RegisterType((*PublishTaskRequest)(nil), "proto.PublishTaskRequest")
	proto.RegisterType((*Task)(nil), "proto.Task")
}

func init() { proto.RegisterFile("bokchoy.proto", fileDescriptor_4e2b3c797ca0eafb) }

var fileDescriptor_4e2b3c797ca0eafb = []byte{
	// 521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xcf, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x49, 0xec, 0x24, 0x78, 0x5c, 0x40, 0x5a, 0xa1, 0xca, 0x0d, 0x12, 0xae, 0x72, 0xea,
	0x05, 0x47, 0x2a, 0x7f, 0x7b, 0x40, 0x28, 0xa6, 0x48, 0x44, 0xe2, 0x80, 0x2c, 0x8b, 0x6b, 0xb4,
	0x8e, 0x17, 0xc7, 0xaa, 0xed, 0x75, 0xbd, 0xb3, 0xb4, 0x79, 0x0b, 0x8e, 0xdc, 0x79, 0x19, 0x9e,
	0x22, 0x48, 0xbd, 0xf0, 0x1a, 0xc8, 0xbb, 0x36, 0x0d, 0x84, 0xaa, 0x69, 0x4f, 0xd9, 0xc9, 0xcc,
	0xef, 0xf3, 0xcc, 0x7c, 0xda, 0x85, 0x7b, 0x11, 0x3f, 0x99, 0x2f, 0xf8, 0xd2, 0x2b, 0x2b, 0x8e,
	0x9c, 0xf4, 0xd4, 0xcf, 0xd0, 0x4d, 0x38, 0x4f, 0x32, 0x36, 0x56, 0x51, 0x24, 0x3f, 0x8f, 0x31,
	0xcd, 0x99, 0x40, 0x9a, 0x97, 0xba, 0x6e, 0xf8, 0xf8, 0xdf, 0x82, 0x58, 0x56, 0x14, 0x53, 0x5e,
	0x5c, 0x95, 0x3f, 0xab, 0x68, 0x59, 0xb2, 0x4a, 0x34, 0xf9, 0x27, 0x49, 0x8a, 0x0b, 0x19, 0x79,
	0x73, 0x9e, 0x8f, 0x13, 0x9e, 0xf0, 0xcb, 0xc2, 0x3a, 0x52, 0x81, 0x3a, 0xe9, 0xf2, 0xd1, 0x77,
	0x03, 0xc8, 0x47, 0x19, 0x65, 0xa9, 0x58, 0x84, 0x54, 0x9c, 0x04, 0xec, 0x54, 0x32, 0x81, 0xe4,
	0x21, 0xf4, 0x4e, 0x25, 0x93, 0xcc, 0xe9, 0xec, 0x77, 0x0e, 0xac, 0x40, 0x07, 0xe4, 0x39, 0x0c,
	0x4a, 0xba, 0xcc, 0x38, 0x8d, 0x9d, 0xee, 0x7e, 0xe7, 0xc0, 0x3e, 0x7c, 0xe4, 0xe9, 0x6e, 0xbc,
	0xf6, 0x23, 0x9e, 0xbf, 0x44, 0x26, 0x3e, 0xd1, 0x4c, 0xb2, 0xa0, 0xad, 0x25, 0xaf, 0xc1, 0x9a,
	0x73, 0x59, 0x60, 0xcc, 0xcf, 0x0a, 0xc7, 0x50, 0xe0, 0xde, 0x06, 0x78, 0xdc, 0x8c, 0xe9, 0x9b,
	0xdf, 0x7e, 0xba, 0x9d, 0xe0, 0x92, 0x20, 0x47, 0x30, 0xa8, 0x97, 0xc4, 0x25, 0x3a, 0xe6, 0x76,
	0x70, 0x5b, 0x4f, 0x5e, 0x81, 0x81, 0x98, 0x39, 0xbd, 0xeb, 0x30, 0xfb, 0x62, 0xe5, 0x1a, 0x61,
	0xf8, 0x41, 0xd1, 0x35, 0x42, 0x7c, 0xb0, 0x73, 0x7a, 0x3e, 0xab, 0x18, 0x56, 0x29, 0x13, 0x4e,
	0xff, 0x8a, 0x71, 0xa7, 0x05, 0xbe, 0x78, 0xa6, 0xc6, 0xf5, 0xcd, 0x1f, 0x2b, 0xb7, 0x13, 0x40,
	0x4e, 0xcf, 0x03, 0x0d, 0x91, 0xf7, 0xf0, 0xa0, 0xe6, 0x97, 0xb3, 0xb4, 0x40, 0x56, 0x7d, 0xa1,
	0x99, 0x70, 0x06, 0xfb, 0xc6, 0x36, 0x03, 0xdc, 0x57, 0xdc, 0xb4, 0xc5, 0x46, 0xbf, 0x4c, 0x30,
	0x6b, 0x7b, 0xc8, 0x2e, 0x74, 0xd3, 0x58, 0x9b, 0xe2, 0xf7, 0x2f, 0x56, 0x6e, 0x77, 0x7a, 0x1c,
	0x74, 0xd3, 0x98, 0x10, 0x30, 0x0b, 0x9a, 0x33, 0x65, 0x8b, 0x15, 0xa8, 0xf3, 0xba, 0x5b, 0xc6,
	0x0d, 0xdc, 0xda, 0x85, 0xbe, 0x40, 0x8a, 0x52, 0xa8, 0x6d, 0x1b, 0x41, 0x13, 0x11, 0xf7, 0xef,
	0x8d, 0xf4, 0x54, 0x72, 0x7d, 0xdc, 0x35, 0x9f, 0xfa, 0xb7, 0xf3, 0x69, 0x70, 0x73, 0x9f, 0xfe,
	0xb3, 0xe3, 0xbb, 0xb7, 0xda, 0x31, 0x79, 0x0b, 0x3b, 0xa5, 0xbe, 0x08, 0x2c, 0x9e, 0x51, 0x74,
	0x2c, 0xd5, 0xcc, 0x70, 0x43, 0x26, 0x6c, 0x2f, 0xac, 0x6f, 0x7e, 0xad, 0x75, 0xec, 0x3f, 0xd4,
	0x04, 0xc9, 0x1b, 0x00, 0x81, 0xb4, 0x42, 0x2d, 0x01, 0x5b, 0x4a, 0x58, 0x0d, 0x33, 0x41, 0xd5,
	0x45, 0xc5, 0xe7, 0x4c, 0x08, 0x2d, 0x61, 0x6f, 0xdd, 0x45, 0x4b, 0x4d, 0x90, 0x1c, 0x81, 0xc1,
	0x90, 0x3a, 0x3b, 0xd7, 0xb2, 0x6a, 0x9f, 0xef, 0xc2, 0x89, 0x92, 0xa8, 0x99, 0x43, 0x1f, 0x06,
	0xbe, 0x7e, 0xb7, 0xc8, 0x4b, 0xb0, 0xd7, 0x5e, 0x06, 0xb2, 0xa7, 0x05, 0xbc, 0xcd, 0xd7, 0x62,
	0x68, 0x37, 0xa9, 0xfa, 0xbf, 0xd1, 0x9d, 0xa8, 0xaf, 0xa2, 0xa7, 0xbf, 0x03, 0x00, 0x00, 0xff,
	0xff, 0xd3, 0xde, 0x3a, 0x24, 0x02, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BokchoyClient is the client API for Bokchoy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BokchoyClient interface {
	PublishTask(ctx context.Context, in *PublishTaskRequest, opts ...grpc.CallOption) (*Task, error)
}

type bokchoyClient struct {
	cc *grpc.ClientConn
}

func NewBokchoyClient(cc *grpc.ClientConn) BokchoyClient {
	return &bokchoyClient{cc}
}

func (c *bokchoyClient) PublishTask(ctx context.Context, in *PublishTaskRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := c.cc.Invoke(ctx, "/proto.Bokchoy/PublishTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BokchoyServer is the server API for Bokchoy service.
type BokchoyServer interface {
	PublishTask(context.Context, *PublishTaskRequest) (*Task, error)
}

func RegisterBokchoyServer(s *grpc.Server, srv BokchoyServer) {
	s.RegisterService(&_Bokchoy_serviceDesc, srv)
}

func _Bokchoy_PublishTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BokchoyServer).PublishTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Bokchoy/PublishTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BokchoyServer).PublishTask(ctx, req.(*PublishTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bokchoy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Bokchoy",
	HandlerType: (*BokchoyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PublishTask",
			Handler:    _Bokchoy_PublishTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bokchoy.proto",
}
